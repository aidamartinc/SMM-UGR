/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package p8;

import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import sm.amc.iu.Lienzo2D;
import sm.amc.iu.Lienzo2D.Forma;

import java.awt.Color;
import java.awt.Stroke;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import sm.amc.graficos.MiRectangulo;

/**
 * Clase Ventana Principal
 *
 * @author aidam
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Constructor de la clase
     */
    public VentanaPrincipal() {
        initComponents();
        this.setSize(1280, 720);
    }

    private Lienzo2D getSelectedLienzo() {
        VentanaInterna vi;
        vi = (VentanaInterna) escritorio.getSelectedFrame();
        return vi != null ? vi.getLienzo2D() : null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        ButtonNuevo = new javax.swing.JButton();
        ButtonAbrir = new javax.swing.JButton();
        ButtonGuardar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        ButtonLinea = new javax.swing.JToggleButton();
        ButtonRectang = new javax.swing.JToggleButton();
        ButtonCirc = new javax.swing.JToggleButton();
        ButtonFantasma = new javax.swing.JToggleButton();
        ButtonSeleccion = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        ButtonColor = new javax.swing.JButton();
        ButtonRellenar = new javax.swing.JToggleButton();
        ButtonTransparencia = new javax.swing.JToggleButton();
        ButtonAlisado = new javax.swing.JToggleButton();
        SliderGrosor = new javax.swing.JSlider();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        ButtonVolcar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        BarraDeEstado = new javax.swing.JLabel();
        escritorio = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArchivo = new javax.swing.JMenu();
        jMenuItemNuevo = new javax.swing.JMenuItem();
        jMenuItemAbrir = new javax.swing.JMenuItem();
        jMenuItemGuardar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        ButtonNuevo.setBackground(new java.awt.Color(242, 242, 242));
        ButtonNuevo.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\nuevo.png")); // NOI18N
        ButtonNuevo.setBorderPainted(false);
        ButtonNuevo.setFocusable(false);
        ButtonNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonNuevo);

        ButtonAbrir.setBackground(new java.awt.Color(242, 242, 242));
        ButtonAbrir.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\abrir.png")); // NOI18N
        ButtonAbrir.setBorderPainted(false);
        ButtonAbrir.setFocusable(false);
        ButtonAbrir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonAbrir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAbrirActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonAbrir);

        ButtonGuardar.setBackground(new java.awt.Color(242, 242, 242));
        ButtonGuardar.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\guardar.png")); // NOI18N
        ButtonGuardar.setBorderPainted(false);
        ButtonGuardar.setFocusable(false);
        ButtonGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonGuardar);
        jToolBar1.add(jSeparator3);

        ButtonLinea.setBackground(new java.awt.Color(242, 242, 242));
        ButtonLinea.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\linea.png")); // NOI18N
        ButtonLinea.setSelected(true);
        ButtonLinea.setBorderPainted(false);
        ButtonLinea.setFocusable(false);
        ButtonLinea.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonLinea.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLineaActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonLinea);

        ButtonRectang.setBackground(new java.awt.Color(242, 242, 242));
        ButtonRectang.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\rectangulo.png")); // NOI18N
        ButtonRectang.setBorderPainted(false);
        ButtonRectang.setFocusable(false);
        ButtonRectang.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonRectang.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonRectang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRectangActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonRectang);

        ButtonCirc.setBackground(new java.awt.Color(242, 242, 242));
        ButtonCirc.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\elipse.png")); // NOI18N
        ButtonCirc.setBorderPainted(false);
        ButtonCirc.setFocusable(false);
        ButtonCirc.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonCirc.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonCirc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCircActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonCirc);

        ButtonFantasma.setBackground(new java.awt.Color(242, 242, 242));
        ButtonFantasma.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\fantasma.png")); // NOI18N
        ButtonFantasma.setBorderPainted(false);
        ButtonFantasma.setFocusable(false);
        ButtonFantasma.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonFantasma.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonFantasma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonFantasmaActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonFantasma);

        ButtonSeleccion.setBackground(new java.awt.Color(242, 242, 242));
        ButtonSeleccion.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\seleccion.png")); // NOI18N
        ButtonSeleccion.setBorderPainted(false);
        ButtonSeleccion.setFocusable(false);
        ButtonSeleccion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonSeleccion.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSeleccionActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonSeleccion);
        jToolBar1.add(jSeparator1);

        ButtonColor.setBackground(new java.awt.Color(0, 0, 0));
        ButtonColor.setBorderPainted(false);
        ButtonColor.setFocusable(false);
        ButtonColor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonColor.setMaximumSize(new java.awt.Dimension(34, 32));
        ButtonColor.setMinimumSize(new java.awt.Dimension(34, 32));
        ButtonColor.setPreferredSize(new java.awt.Dimension(34, 32));
        ButtonColor.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonColorActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonColor);

        ButtonRellenar.setBackground(new java.awt.Color(242, 242, 242));
        ButtonRellenar.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\rellenar.png")); // NOI18N
        ButtonRellenar.setBorderPainted(false);
        ButtonRellenar.setFocusable(false);
        ButtonRellenar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonRellenar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonRellenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRellenarActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonRellenar);

        ButtonTransparencia.setBackground(new java.awt.Color(242, 242, 242));
        ButtonTransparencia.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\transparencia.png")); // NOI18N
        ButtonTransparencia.setBorderPainted(false);
        ButtonTransparencia.setFocusable(false);
        ButtonTransparencia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonTransparencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonTransparencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTransparenciaActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonTransparencia);

        ButtonAlisado.setBackground(new java.awt.Color(242, 242, 242));
        ButtonAlisado.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\alisar.png")); // NOI18N
        ButtonAlisado.setBorderPainted(false);
        ButtonAlisado.setFocusable(false);
        ButtonAlisado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonAlisado.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonAlisado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAlisadoActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonAlisado);

        SliderGrosor.setMaximumSize(new java.awt.Dimension(100, 20));
        SliderGrosor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderGrosorStateChanged(evt);
            }
        });
        jToolBar1.add(SliderGrosor);
        jToolBar1.add(jSeparator2);

        ButtonVolcar.setIcon(new javax.swing.ImageIcon("C:\\Users\\aidam\\Documents\\NetBeansProjects\\P8\\iconos\\volcado.png")); // NOI18N
        ButtonVolcar.setBorderPainted(false);
        ButtonVolcar.setContentAreaFilled(false);
        ButtonVolcar.setFocusable(false);
        ButtonVolcar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonVolcar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ButtonVolcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonVolcarActionPerformed(evt);
            }
        });
        jToolBar1.add(ButtonVolcar);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setPreferredSize(new java.awt.Dimension(90, 22));
        jPanel3.setLayout(new java.awt.BorderLayout());

        BarraDeEstado.setText("Barra de estado");
        jPanel3.add(BarraDeEstado, java.awt.BorderLayout.LINE_START);

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 552, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );

        getContentPane().add(escritorio, java.awt.BorderLayout.CENTER);

        jMenuArchivo.setText("Archivo");

        jMenuItemNuevo.setText("Nuevo");
        jMenuItemNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNuevoActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemNuevo);

        jMenuItemAbrir.setText("Abrir");
        jMenuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemAbrir);

        jMenuItemGuardar.setText("Guardar");
        jMenuItemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGuardarActionPerformed(evt);
            }
        });
        jMenuArchivo.add(jMenuItemGuardar);

        jMenuBar1.add(jMenuArchivo);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLineaActionPerformed
        // TODO add your handling code here:
        //this.lienzo.setTipoForma(0);
        Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo != null) {
            lienzo.setTipoForma(Forma.LINEA);
            this.ButtonRectang.setSelected(false);
            this.ButtonCirc.setSelected(false);
            this.ButtonFantasma.setSelected(false);
            this.ButtonSeleccion.setSelected(false);
            lienzo.setMover(false);
            lienzo.pararEditar();
            this.BarraDeEstado.setText("Linea");
        }

    }//GEN-LAST:event_ButtonLineaActionPerformed

    private void ButtonRectangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRectangActionPerformed
        // TODO add your handling code here:
        //this.lienzo.setTipoForma(1);
        Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo != null) {
            lienzo.setTipoForma(Forma.RECTANGULO);
            this.ButtonLinea.setSelected(false);
            this.ButtonCirc.setSelected(false);
            this.ButtonFantasma.setSelected(false);
            this.ButtonSeleccion.setSelected(false);
            lienzo.setMover(false);
            lienzo.pararEditar();
            this.BarraDeEstado.setText("Rectangulo");
        }
    }//GEN-LAST:event_ButtonRectangActionPerformed

    private void ButtonCircActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCircActionPerformed
        // TODO add your handling code here:
        //this.lienzo.setTipoForma(2);
        Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo != null) {
            lienzo.setTipoForma(Forma.ELIPSE);
            this.ButtonLinea.setSelected(false);
            this.ButtonRectang.setSelected(false);
            this.ButtonFantasma.setSelected(false);
            this.ButtonSeleccion.setSelected(false);
            lienzo.setMover(false);
            lienzo.pararEditar();
            this.BarraDeEstado.setText("Elipse");
        }
    }//GEN-LAST:event_ButtonCircActionPerformed

    private void jMenuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser dig = new JFileChooser();
        int resp = dig.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = dig.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna();
                vi.getLienzo2D().setImage(img);
                this.escritorio.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
            } catch (Exception ex) {
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_jMenuItemAbrirActionPerformed

    private void jMenuItemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGuardarActionPerformed
        // TODO add your handling code here:   
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            //BufferedImage img = vi.getLienzo2D().getImage();
            BufferedImage img = vi.getLienzo2D().getPaintedImage();
            if (img != null) {
                JFileChooser dig = new JFileChooser();
                int resp = dig.showSaveDialog(this);
                if (resp == JFileChooser.APPROVE_OPTION) {
                    try {
                        File f = dig.getSelectedFile();
                        ImageIO.write(img, "jpg", f);
                        vi.setTitle(f.getName());
                    } catch (Exception ex) {
                        System.err.println("Error al guardar la imagen");
                    }
                }
            }
        }
    }//GEN-LAST:event_jMenuItemGuardarActionPerformed

    private void jMenuItemNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNuevoActionPerformed
        // TODO add your handling code here:
        /*Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo!=null){
            lienzo.clean();*/
        //Lienzo2D l = new Lienzo2D();
        //lienzo = l;
        VentanaInterna vi = new VentanaInterna();
        escritorio.add(vi);
        vi.setVisible(true);
        BufferedImage img;
        img = new BufferedImage(300, 300, BufferedImage.TYPE_INT_RGB);
        vi.getLienzo2D().setImage(img);
        // Para que no salga relleno en negro
        img.getGraphics().setColor(Color.WHITE);
        img.getGraphics().fillRect(img.getMinX(), img.getMinY(), img.getWidth(), img.getHeight());
    }//GEN-LAST:event_jMenuItemNuevoActionPerformed

    private void ButtonFantasmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonFantasmaActionPerformed
        // TODO add your handling code here:
        Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo != null) {
            lienzo.setTipoForma(Forma.FANTASMA);
            this.ButtonRectang.setSelected(false);
            this.ButtonCirc.setSelected(false);
            this.ButtonLinea.setSelected(false);
            this.ButtonSeleccion.setSelected(false);
            lienzo.setMover(false);
            lienzo.pararEditar();
            this.BarraDeEstado.setText("Fantasma");
        }
    }//GEN-LAST:event_ButtonFantasmaActionPerformed

    private void ButtonSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSeleccionActionPerformed
        // TODO add your handling code here:
        Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo != null) {
            lienzo.setMover(this.ButtonSeleccion.isSelected());
            if (lienzo.getMover()) {
                this.ButtonLinea.setSelected(false);
                this.ButtonRectang.setSelected(false);
                this.ButtonCirc.setSelected(false);
                this.ButtonFantasma.setSelected(false);
                this.ButtonAlisado.setSelected(false);
                this.ButtonRellenar.setSelected(false);
                this.ButtonTransparencia.setSelected(false);
                this.BarraDeEstado.setText("Seleccion");
            } else {
                Forma f = lienzo.getTipoForma();
                switch (f) {
                    case LINEA:
                        this.ButtonLinea.setSelected(true);
                        this.BarraDeEstado.setText("Linea");
                        break;
                    case RECTANGULO:
                        this.ButtonRectang.setSelected(true);
                        this.BarraDeEstado.setText("Rectangulo");
                        break;
                    case ELIPSE:
                        this.ButtonCirc.setSelected(true);
                        this.BarraDeEstado.setText("Elipse");
                        break;
                    case FANTASMA:
                        this.ButtonFantasma.setSelected(true);
                        this.BarraDeEstado.setText("Fantasma");
                        break;
                }
                this.ButtonAlisado.setSelected(lienzo.getAlisado());
                this.ButtonRellenar.setSelected(lienzo.getRelleno());
                this.ButtonTransparencia.setSelected(lienzo.getTransparencia());
            }
        }
    }//GEN-LAST:event_ButtonSeleccionActionPerformed

    private void ButtonRellenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRellenarActionPerformed
        // TODO add your handling code here:
        Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo != null) {
            lienzo.setRelleno(this.ButtonRellenar.isSelected());
            this.ButtonSeleccion.setSelected(false);
        }
    }//GEN-LAST:event_ButtonRellenarActionPerformed

    private void ButtonTransparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonTransparenciaActionPerformed
        // TODO add your handling code here:
        Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo != null) {
            lienzo.setTransparencia(this.ButtonTransparencia.isSelected());
            if (lienzo.getTransparencia()) {
                lienzo.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f));
            } else {
                lienzo.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1));
            }
            this.ButtonSeleccion.setSelected(false);
        }
    }//GEN-LAST:event_ButtonTransparenciaActionPerformed

    private void ButtonAlisadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAlisadoActionPerformed
        // TODO add your handling code here:
        Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo != null) {
            lienzo.setAlisado(this.ButtonAlisado.isSelected());
            this.ButtonSeleccion.setSelected(false);
        }
    }//GEN-LAST:event_ButtonAlisadoActionPerformed

    private void SliderGrosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderGrosorStateChanged
        // TODO add your handling code here:
        Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo != null) {
            Stroke trazo = new BasicStroke((int) SliderGrosor.getValue());
            lienzo.setTrazo(trazo);
            lienzo.repaint();
            this.ButtonSeleccion.setSelected(false);
        }
    }//GEN-LAST:event_SliderGrosorStateChanged

    private void ButtonColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonColorActionPerformed
        // TODO add your handling code here:
        Color color = JColorChooser.showDialog(this, "Elije un color", Color.RED);
        Lienzo2D lienzo = getSelectedLienzo();
        if (lienzo != null) {
            lienzo.setColor(color);
            this.ButtonColor.setBackground(color);
            this.ButtonSeleccion.setSelected(false);
        }
    }//GEN-LAST:event_ButtonColorActionPerformed

    private void ButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNuevoActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = new VentanaInterna();
        escritorio.add(vi);
        vi.setVisible(true);
        BufferedImage img;
        img = new BufferedImage(300, 300, BufferedImage.TYPE_INT_RGB);
        vi.getLienzo2D().setImage(img);
        // Para que no salga relleno en negro
        img.getGraphics().setColor(Color.WHITE);
        img.getGraphics().fillRect(img.getMinX(), img.getMinY(), img.getWidth(), img.getHeight());
    }//GEN-LAST:event_ButtonNuevoActionPerformed

    private void ButtonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser dig = new JFileChooser();
        int resp = dig.showOpenDialog(this);
        if (resp == JFileChooser.APPROVE_OPTION) {
            try {
                File f = dig.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna();
                vi.getLienzo2D().setImage(img);
                this.escritorio.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
            } catch (Exception ex) {
                System.err.println("Error al leer la imagen");
            }
        }
    }//GEN-LAST:event_ButtonAbrirActionPerformed

    private void ButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGuardarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null) {
            //BufferedImage img = vi.getLienzo2D().getImage();
            BufferedImage img = vi.getLienzo2D().getPaintedImage();
            if (img != null) {
                JFileChooser dig = new JFileChooser();
                int resp = dig.showSaveDialog(this);
                if (resp == JFileChooser.APPROVE_OPTION) {
                    try {
                        File f = dig.getSelectedFile();
                        ImageIO.write(img, "jpg", f);
                        vi.setTitle(f.getName());
                    } catch (Exception ex) {
                        System.err.println("Error al guardar la imagen");
                    }
                }
            }
        }
    }//GEN-LAST:event_ButtonGuardarActionPerformed

    private void ButtonVolcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonVolcarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) escritorio.getSelectedFrame();
        if (vi != null){
            BufferedImage img = vi.getLienzo2D().getImage();
            if (img != null){
                vi.getLienzo2D().volcar(vi.getLienzo2D().getForma());
            }
        }
    }//GEN-LAST:event_ButtonVolcarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal().setVisible(true);
                //new VentanaInterna().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BarraDeEstado;
    private javax.swing.JButton ButtonAbrir;
    private javax.swing.JToggleButton ButtonAlisado;
    private javax.swing.JToggleButton ButtonCirc;
    private javax.swing.JButton ButtonColor;
    private javax.swing.JToggleButton ButtonFantasma;
    private javax.swing.JButton ButtonGuardar;
    private javax.swing.JToggleButton ButtonLinea;
    private javax.swing.JButton ButtonNuevo;
    private javax.swing.JToggleButton ButtonRectang;
    private javax.swing.JToggleButton ButtonRellenar;
    private javax.swing.JToggleButton ButtonSeleccion;
    private javax.swing.JToggleButton ButtonTransparencia;
    private javax.swing.JButton ButtonVolcar;
    private javax.swing.JSlider SliderGrosor;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JMenu jMenuArchivo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemAbrir;
    private javax.swing.JMenuItem jMenuItemGuardar;
    private javax.swing.JMenuItem jMenuItemNuevo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

}
